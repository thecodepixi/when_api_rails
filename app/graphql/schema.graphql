"""
A calendar event
"""
type Event implements Node {
  """
  A description of the event
  """
  description: String

  """
  The end date of the event, in ISO8601 format
  """
  endDate: ISO8601Date

  """
  The end time of the event, in ISO8601 format
  """
  endTime: ISO8601DateTime
  id: ID!

  """
  The unique readable identifier for the event, like a title or a name
  """
  label: String!

  """
  The start date of the event, in ISO8601 format
  """
  startDate: ISO8601Date!

  """
  The start time of the event, ISO8601 format
  """
  startTime: ISO8601DateTime
}

"""
Autogenerated input type of EventCreate
"""
input EventCreateInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  A description of the event
  """
  description: String

  """
  The end date of the event, ISO8601 format
  """
  endDate: ISO8601Date

  """
  The end time of the event, ISO8601
  """
  endTime: ISO8601DateTime

  """
  The unique readable identifier for the event, like a title or a name
  """
  label: String!

  """
  The start date of the event, ISO8601 format
  """
  startDate: ISO8601Date!

  """
  The start time of the event, ISO8601
  """
  startTime: ISO8601DateTime
}

"""
Autogenerated return type of EventCreate.
"""
type EventCreatePayload implements Node {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]!
  event: Event

  """
  ID of the object.
  """
  id: ID!
}

"""
An ISO 8601-encoded date
"""
scalar ISO8601Date

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime

type Mutation implements Node {
  eventCreate(
    """
    Parameters for EventCreate
    """
    input: EventCreateInput!
  ): EventCreatePayload

  """
  ID of the object.
  """
  id: ID!
}

"""
An object with an ID.
"""
interface Node {
  """
  ID of the object.
  """
  id: ID!
}

type Query implements Node {
  """
  Find an Event by ID
  """
  event(id: ID!): Event

  """
  ID of the object.
  """
  id: ID!

  """
  Fetches an object given its ID.
  """
  node(
    """
    ID of the object.
    """
    id: ID!
  ): Node

  """
  Fetches a list of objects given a list of IDs.
  """
  nodes(
    """
    IDs of the objects.
    """
    ids: [ID!]!
  ): [Node]!
}
